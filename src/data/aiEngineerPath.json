{
  "stages": [
    {
      "id": 1,
      "title": "컴퓨터 기초",
      "icon": "💻",
      "description": "컴퓨터의 역사와 기본 개념을 배워요",
      "lessons": [
        {
          "id": 1,
          "title": "컴퓨터란 무엇인가?",
          "content": "컴퓨터는 데이터를 처리하는 전자 기기입니다.\n\n**컴퓨터의 역사:**\n- 1946년: 최초의 전자 컴퓨터 ENIAC 탄생\n- 1950년대: 진공관 컴퓨터 시대\n- 1960년대: 트랜지스터 컴퓨터 등장\n- 1970년대: 집적회로(IC) 사용 시작\n- 1980년대: 개인용 컴퓨터(PC) 보급\n- 1990년대: 인터넷 시대 개막\n- 2000년대: 스마트폰과 모바일 혁명\n\n**컴퓨터의 구성:**\n- CPU (중앙처리장치): 컴퓨터의 두뇌\n- 메모리 (RAM): 임시 저장 공간\n- 하드디스크: 영구 저장 장치\n- 입력장치: 키보드, 마우스\n- 출력장치: 모니터, 프린터",
          "quiz": {
            "question": "최초의 전자 컴퓨터 이름은?",
            "options": ["ENIAC", "IBM", "Apple", "Microsoft"],
            "answer": 0
          }
        },
        {
          "id": 2,
          "title": "파일과 폴더",
          "content": "**파일(File)이란?**\n파일은 컴퓨터에 저장된 정보의 묶음입니다.\n- 문서 파일: .txt, .docx, .pdf\n- 이미지 파일: .jpg, .png, .gif\n- 동영상 파일: .mp4, .avi\n- 음악 파일: .mp3, .wav\n\n**폴더(Folder)란?**\n폴더는 파일을 정리하는 공간입니다.\n- 폴더 안에 파일과 다른 폴더를 넣을 수 있어요\n- 책상 서랍처럼 물건을 정리하는 것과 같아요\n\n**파일 확장자:**\n파일 이름 뒤의 점(.) 뒤에 있는 글자가 확장자예요.\n- 예: report.docx → 'docx'가 확장자\n- 확장자로 파일의 종류를 알 수 있어요",
          "quiz": {
            "question": "이미지 파일의 확장자가 아닌 것은?",
            "options": [".jpg", ".png", ".mp3", ".gif"],
            "answer": 2
          }
        },
        {
          "id": 3,
          "title": "마우스 사용법",
          "content": "**마우스의 기본 동작:**\n\n**1. 클릭 (Click)**\n- 마우스 왼쪽 버튼을 한 번 눌러요\n- 파일이나 폴더를 선택할 때 사용해요\n\n**2. 더블클릭 (Double Click)**\n- 마우스 왼쪽 버튼을 빠르게 두 번 눌러요\n- 파일이나 프로그램을 실행할 때 사용해요\n\n**3. 우클릭 (Right Click)**\n- 마우스 오른쪽 버튼을 눌러요\n- 메뉴를 열 때 사용해요\n\n**4. 드래그 (Drag)**\n- 마우스 버튼을 누른 채로 움직여요\n- 파일을 이동하거나 텍스트를 선택할 때 사용해요\n\n**5. 스크롤 (Scroll)**\n- 마우스 가운데 휠을 돌려요\n- 화면을 위아래로 움직일 때 사용해요",
          "quiz": {
            "question": "프로그램을 실행할 때 사용하는 동작은?",
            "options": ["클릭", "더블클릭", "우클릭", "드래그"],
            "answer": 1
          }
        },
        {
          "id": 4,
          "title": "키보드 기초",
          "content": "**주요 키 설명:**\n\n**Enter (엔터)**\n- 명령을 실행하거나 줄을 바꿀 때 사용\n- '확인' 버튼을 누르는 것과 같아요\n\n**Backspace (백스페이스)**\n- 커서 앞의 글자를 지워요\n- 실수로 입력한 글자를 지울 때 사용\n\n**Delete (딜리트)**\n- 커서 뒤의 글자를 지워요\n\n**Shift (쉬프트)**\n- 대문자를 입력하거나 특수문자를 입력할 때 사용\n- 예: Shift + a = A\n\n**Ctrl (컨트롤)**\n- 다른 키와 함께 눌러 단축키로 사용\n- Ctrl + C: 복사\n- Ctrl + V: 붙여넣기\n- Ctrl + Z: 되돌리기\n\n**Alt (알트)**\n- 프로그램의 메뉴를 사용할 때 활용",
          "quiz": {
            "question": "글자를 복사하는 단축키는?",
            "options": ["Ctrl + X", "Ctrl + C", "Ctrl + V", "Ctrl + Z"],
            "answer": 1
          }
        }
      ]
    },
    {
      "id": 2,
      "title": "인터넷과 웹",
      "icon": "🌐",
      "description": "인터넷의 원리와 웹 브라우저 사용법을 배워요",
      "lessons": [
        {
          "id": 5,
          "title": "인터넷이란?",
          "content": "**인터넷의 정의:**\n인터넷은 전 세계의 컴퓨터들이 연결된 거대한 네트워크입니다.\n\n**인터넷의 역사:**\n- 1969년: 미국에서 ARPANET 시작\n- 1989년: 팀 버너스 리가 월드 와이드 웹(WWW) 발명\n- 1990년대: 인터넷 대중화\n- 2000년대: 소셜 미디어 시대\n\n**인터넷으로 할 수 있는 일:**\n- 정보 검색 (구글, 네이버)\n- 이메일 보내기\n- 동영상 시청 (유튜브)\n- 온라인 쇼핑\n- 게임하기\n- 화상 통화\n\n**IP 주소:**\n- 컴퓨터의 인터넷 주소예요\n- 예: 192.168.0.1\n- 우리 집 주소처럼 컴퓨터를 찾을 수 있게 해줘요",
          "quiz": {
            "question": "월드 와이드 웹을 발명한 사람은?",
            "options": ["빌 게이츠", "스티브 잡스", "팀 버너스 리", "마크 저커버그"],
            "answer": 2
          }
        },
        {
          "id": 6,
          "title": "웹 브라우저 사용법",
          "content": "**웹 브라우저란?**\n인터넷 웹사이트를 볼 수 있는 프로그램이에요.\n\n**주요 웹 브라우저:**\n- Chrome (크롬) - 구글\n- Edge (엣지) - 마이크로소프트\n- Safari (사파리) - 애플\n- Firefox (파이어폭스)\n\n**URL (주소):**\n- https://www.google.com\n- https://: 안전한 연결\n- www: 월드 와이드 웹\n- google: 도메인 이름\n- .com: 최상위 도메인\n\n**북마크 (즐겨찾기):**\n- 자주 가는 웹사이트를 저장해요\n- 다시 찾아가기 쉬워요\n\n**검색 엔진:**\n- 구글, 네이버, 빙 등\n- 궁금한 것을 검색할 수 있어요",
          "quiz": {
            "question": "URL에서 'https://'가 의미하는 것은?",
            "options": ["빠른 속도", "안전한 연결", "무료 사이트", "한국 사이트"],
            "answer": 1
          }
        }
      ]
    },
    {
      "id": 3,
      "title": "프로그래밍 입문",
      "icon": "👨‍💻",
      "description": "프로그래밍의 기본 개념을 배워요",
      "lessons": [
        {
          "id": 7,
          "title": "프로그래밍이란?",
          "content": "**프로그래밍의 정의:**\n컴퓨터에게 명령을 내리는 작업이에요.\n\n**프로그래밍 언어:**\n사람과 컴퓨터가 소통하는 언어예요.\n\n**왜 프로그래밍을 배워야 할까요?**\n- 논리적 사고력이 향상돼요\n- 문제 해결 능력이 좋아져요\n- 창의력을 키울 수 있어요\n- 미래의 핵심 기술이에요\n\n**프로그래밍으로 만들 수 있는 것:**\n- 웹사이트 (네이버, 유튜브)\n- 앱 (카카오톡, 게임)\n- 인공지능 (ChatGPT, 알파고)\n- 로봇\n- 자율주행 자동차\n\n**알고리즘:**\n- 문제를 해결하는 단계적 방법\n- 예: 라면 끓이기\n  1. 물을 끓인다\n  2. 면과 스프를 넣는다\n  3. 4분 기다린다\n  4. 완성!",
          "quiz": {
            "question": "프로그래밍의 목적은?",
            "options": ["컴퓨터 수리", "컴퓨터에 명령하기", "인터넷 연결", "파일 저장"],
            "answer": 1
          }
        },
        {
          "id": 8,
          "title": "변수와 데이터",
          "content": "**변수(Variable)란?**\n데이터를 저장하는 상자예요.\n\n```\nage = 10\nname = \"희짱\"\n```\n\n**데이터 타입:**\n\n**1. 숫자 (Number)**\n- 정수: 1, 2, 3, -5\n- 소수: 3.14, 2.5\n\n**2. 문자열 (String)**\n- \"안녕하세요\"\n- \"Hello\"\n- 따옴표로 감싸요\n\n**3. 불린 (Boolean)**\n- True (참)\n- False (거짓)\n- 예/아니오 같은 답\n\n**4. 리스트 (List)**\n- [1, 2, 3, 4, 5]\n- [\"사과\", \"바나나\", \"딸기\"]\n- 여러 값을 한 번에 저장\n\n**변수 이름 규칙:**\n- 의미 있는 이름 사용\n- 숫자로 시작 불가\n- 띄어쓰기 불가 (snake_case 사용)",
          "quiz": {
            "question": "문자열을 나타낼 때 사용하는 기호는?",
            "options": ["()", "[]", "\"\"", "{}"],
            "answer": 2
          }
        },
        {
          "id": 9,
          "title": "조건문 (if문)",
          "content": "**조건문이란?**\n조건에 따라 다른 동작을 하게 만드는 명령이에요.\n\n**if문 구조:**\n```python\nif 조건:\n    실행할 코드\nelse:\n    조건이 거짓일 때 실행\n```\n\n**예제:**\n```python\nage = 10\n\nif age >= 20:\n    print(\"성인입니다\")\nelse:\n    print(\"청소년입니다\")\n```\n\n**비교 연산자:**\n- == : 같다\n- != : 다르다\n- > : 크다\n- < : 작다\n- >= : 크거나 같다\n- <= : 작거나 같다\n\n**실생활 예:**\n```\nif 날씨가 맑다:\n    공원에 간다\nelse:\n    집에서 게임한다\n```\n\n**elif (else if):**\n여러 조건을 확인할 때 사용\n```python\nscore = 85\n\nif score >= 90:\n    print(\"A\")\nelif score >= 80:\n    print(\"B\")\nelse:\n    print(\"C\")\n```",
          "quiz": {
            "question": "'크거나 같다'를 나타내는 연산자는?",
            "options": ["==", ">", ">=", "<="],
            "answer": 2
          }
        },
        {
          "id": 10,
          "title": "반복문 (for, while)",
          "content": "**반복문이란?**\n같은 작업을 여러 번 반복하는 명령이에요.\n\n**for문:**\n정해진 횟수만큼 반복\n```python\nfor i in range(5):\n    print(\"안녕\")\n# 결과: 안녕을 5번 출력\n```\n\n**while문:**\n조건이 참인 동안 반복\n```python\ncount = 0\nwhile count < 3:\n    print(count)\n    count = count + 1\n# 결과: 0, 1, 2 출력\n```\n\n**실생활 예:**\n```\n# 구구단 2단\nfor i in range(1, 10):\n    print(f\"2 x {i} = {2*i}\")\n```\n\n**무한 루프 주의!**\n```python\n# 위험! 끝나지 않아요\nwhile True:\n    print(\"영원히...\")\n```\n\n**break와 continue:**\n- break: 반복 중단\n- continue: 다음 반복으로",
          "quiz": {
            "question": "1부터 10까지 출력하려면?",
            "options": ["for i in range(1, 10)", "for i in range(1, 11)", "for i in range(10)", "while i < 10"],
            "answer": 1
          }
        }
      ]
    },
    {
      "id": 4,
      "title": "C언어 기초",
      "icon": "⚙️",
      "description": "가장 기본적인 프로그래밍 언어 C를 배워요",
      "lessons": [
        {
          "id": 11,
          "title": "C언어 소개",
          "content": "**C언어란?**\n1972년 데니스 리치가 만든 프로그래밍 언어예요.\n\n**왜 C언어를 배울까요?**\n- 모든 프로그래밍의 기초\n- 컴퓨터 구조를 이해할 수 있어요\n- 빠른 실행 속도\n- 운영체제, 게임 엔진 등에 사용\n\n**Hello World 프로그램:**\n```c\n#include <stdio.h>\n\nint main() {\n    printf(\"Hello, World!\\n\");\n    return 0;\n}\n```\n\n**코드 설명:**\n- `#include <stdio.h>`: 입출력 라이브러리\n- `int main()`: 프로그램 시작점\n- `printf()`: 화면에 출력\n- `return 0`: 정상 종료\n- `\\n`: 줄바꿈\n\n**컴파일:**\nC언어는 컴파일 언어예요.\n소스코드 → 컴파일러 → 실행파일",
          "quiz": {
            "question": "C언어를 만든 사람은?",
            "options": ["빌 게이츠", "데니스 리치", "제임스 고슬링", "귀도 반 로섬"],
            "answer": 1
          }
        },
        {
          "id": 12,
          "title": "C언어 변수와 자료형",
          "content": "**C언어의 주요 자료형:**\n\n**정수형:**\n- `int`: 정수 (-2147483648 ~ 2147483647)\n- `short`: 작은 정수\n- `long`: 큰 정수\n\n**실수형:**\n- `float`: 소수점 (7자리)\n- `double`: 큰 소수점 (15자리)\n\n**문자형:**\n- `char`: 한 글자 ('A', 'b')\n\n**예제:**\n```c\nint age = 15;\nfloat height = 165.5;\nchar grade = 'A';\ndouble pi = 3.141592653589793;\n\nprintf(\"나이: %d\\n\", age);\nprintf(\"키: %.1f\\n\", height);\nprintf(\"학점: %c\\n\", grade);\n```\n\n**형식 지정자:**\n- %d: 정수\n- %f: 실수\n- %c: 문자\n- %s: 문자열\n\n**상수:**\n```c\nconst int MAX = 100;\n// MAX는 변경 불가\n```",
          "quiz": {
            "question": "실수를 저장하는 자료형은?",
            "options": ["int", "char", "float", "string"],
            "answer": 2
          }
        }
      ]
    },
    {
      "id": 5,
      "title": "Java 프로그래밍",
      "icon": "☕",
      "description": "객체지향 언어 Java를 배워요",
      "lessons": [
        {
          "id": 13,
          "title": "Java 소개",
          "content": "**Java란?**\n1995년 제임스 고슬링이 만든 객체지향 프로그래밍 언어예요.\n\n**Java의 특징:**\n- \"Write Once, Run Anywhere\" (한 번 작성, 어디서나 실행)\n- JVM (Java Virtual Machine) 위에서 실행\n- 안드로이드 앱 개발에 사용\n- 대규모 시스템 개발에 적합\n\n**Hello World:**\n```java\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n```\n\n**코드 설명:**\n- `public class`: 클래스 선언\n- `main`: 프로그램 시작점\n- `System.out.println()`: 출력 함수\n\n**Java vs C:**\n- Java: 객체지향, 자동 메모리 관리\n- C: 절차지향, 수동 메모리 관리\n\n**Java로 만들 수 있는 것:**\n- 안드로이드 앱\n- 웹 서버 (Spring)\n- 게임 (Minecraft)\n- 데이터베이스 프로그램",
          "quiz": {
            "question": "Java의 슬로건은?",
            "options": ["빠른 실행", "한 번 작성, 어디서나 실행", "쉬운 언어", "강력한 성능"],
            "answer": 1
          }
        },
        {
          "id": 14,
          "title": "객체지향 프로그래밍",
          "content": "**객체지향(OOP)이란?**\n현실 세계의 사물을 프로그래밍으로 표현하는 방법이에요.\n\n**클래스와 객체:**\n```java\n// 클래스: 설계도\nclass Cat {\n    String name;\n    int age;\n    \n    void meow() {\n        System.out.println(\"야옹~\");\n    }\n}\n\n// 객체: 실제 고양이\nCat heezzang = new Cat();\nheezzang.name = \"희짱\";\nheezzang.age = 3;\nheezzang.meow(); // 야옹~\n```\n\n**OOP의 4대 특징:**\n\n**1. 캡슐화 (Encapsulation)**\n- 데이터와 기능을 하나로 묶음\n- private, public으로 접근 제한\n\n**2. 상속 (Inheritance)**\n- 부모 클래스의 특성을 물려받음\n```java\nclass Animal {\n    void eat() { }\n}\n\nclass Cat extends Animal {\n    void meow() { }\n}\n```\n\n**3. 다형성 (Polymorphism)**\n- 같은 이름, 다른 동작\n\n**4. 추상화 (Abstraction)**\n- 복잡한 것을 단순하게",
          "quiz": {
            "question": "클래스와 객체의 관계는?",
            "options": ["같은 것", "클래스는 설계도, 객체는 실제 물건", "객체가 더 큼", "관계 없음"],
            "answer": 1
          }
        }
      ]
    },
    {
      "id": 6,
      "title": "인공지능 입문",
      "icon": "🤖",
      "description": "AI와 머신러닝의 기초를 배워요",
      "lessons": [
        {
          "id": 15,
          "title": "인공지능이란?",
          "content": "**인공지능(AI)의 정의:**\n사람처럼 생각하고 학습하는 컴퓨터 프로그램이에요.\n\n**AI의 역사:**\n- 1956년: AI 용어 탄생\n- 1997년: IBM Deep Blue가 체스 챔피언 이김\n- 2011년: IBM Watson이 퀴즈쇼 우승\n- 2016년: AlphaGo가 이세돌 9단 이김\n- 2022년: ChatGPT 출시\n\n**AI의 종류:**\n\n**1. 약한 AI (Narrow AI)**\n- 특정 분야에 특화\n- 현재 대부분의 AI\n- 예: Siri, 번역기, 추천 시스템\n\n**2. 강한 AI (General AI)**\n- 사람처럼 모든 것 가능\n- 아직 개발 중\n\n**AI가 사용되는 곳:**\n- 음성인식: Siri, Bixby\n- 이미지인식: 얼굴인식, 자율주행\n- 번역: 구글 번역, 파파고\n- 추천: 유튜브, 넷플릭스\n- 게임: 알파고\n- 의료: 질병 진단\n- 챗봇: ChatGPT",
          "quiz": {
            "question": "AlphaGo가 이긴 한국 기사는?",
            "options": ["조훈현", "이창호", "이세돌", "박정환"],
            "answer": 2
          }
        },
        {
          "id": 16,
          "title": "머신러닝 기초",
          "content": "**머신러닝(Machine Learning)이란?**\n컴퓨터가 데이터를 보고 스스로 학습하는 기술이에요.\n\n**학습 방법:**\n\n**1. 지도학습 (Supervised Learning)**\n- 정답이 있는 데이터로 학습\n- 예: 고양이/강아지 구분\n  - 고양이 사진 1000장 (정답: 고양이)\n  - 강아지 사진 1000장 (정답: 강아지)\n\n**2. 비지도학습 (Unsupervised Learning)**\n- 정답 없이 패턴 찾기\n- 예: 고객 그룹 분류\n\n**3. 강화학습 (Reinforcement Learning)**\n- 보상으로 학습\n- 예: 게임 AI\n\n**딥러닝 (Deep Learning):**\n- 인간의 뇌를 모방한 신경망\n- 층이 깊은 신경망\n- 이미지, 음성 인식에 강함\n\n**Python으로 AI 만들기:**\n```python\nimport sklearn\n\n# 데이터 준비\nX = [[키, 몸무게], ...]\ny = [\"성인\", \"청소년\", ...]\n\n# 모델 학습\nmodel.fit(X, y)\n\n# 예측\nresult = model.predict([[170, 60]])\n```",
          "quiz": {
            "question": "정답이 있는 데이터로 학습하는 방법은?",
            "options": ["지도학습", "비지도학습", "강화학습", "전이학습"],
            "answer": 0
          }
        },
        {
          "id": 17,
          "title": "AI 윤리와 미래",
          "content": "**AI 윤리 문제:**\n\n**1. 편향성 (Bias)**\n- AI가 특정 그룹을 차별할 수 있어요\n- 학습 데이터가 편향되면 결과도 편향돼요\n\n**2. 개인정보 보호**\n- AI가 개인 데이터를 많이 사용해요\n- 데이터 보호가 중요해요\n\n**3. 일자리 문제**\n- AI가 사람의 일을 대체할 수 있어요\n- 새로운 일자리도 만들어져요\n\n**4. 책임 문제**\n- AI가 실수하면 누구 책임인가요?\n\n**AI의 미래:**\n\n**가까운 미래 (5-10년)**\n- 더 정확한 의료 진단\n- 완전 자율주행 자동차\n- 개인 맞춤 교육\n- 더 자연스러운 AI 비서\n\n**먼 미래 (20-50년)**\n- 강한 AI (AGI) 개발\n- AI와 인간의 협업\n- 우주 탐사 AI\n\n**AI 엔지니어가 되려면:**\n- 수학: 통계, 확률, 선형대수\n- 프로그래밍: Python\n- 도구: TensorFlow, PyTorch\n- 영어: 최신 논문 읽기\n- 윤리: 책임감 있는 AI 개발",
          "quiz": {
            "question": "AI 개발에서 가장 중요한 것은?",
            "options": ["빠른 속도", "많은 데이터", "윤리적 책임", "화려한 기능"],
            "answer": 2
          }
        }
      ]
    }
  ]
}
